package com.hungerfool.demomysql.controller;


import java.util.concurrent.atomic.AtomicLong;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.hungerfool.demomysql.Person;
import com.hungerfool.demomysql.PersonDao;
import com.hungerfool.demomysql.dao.impl.UserRepository;
import com.hungerfool.demomysql.domain.User;


@RestController    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@RequestMapping("/add") // Map ONLY GET Requests
	public User addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return n;
	}

	@RequestMapping("/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
	@RequestMapping("/")
	public String index() {
		return "Hello Spring Boot main controller";
	}
	
	@Autowired
	PersonDao personDao;
	
	private final AtomicLong counter = new AtomicLong();

	@RequestMapping("/get")
	public Person getP(String name) {
		Person person = personDao.findByName(name).get(0);
		return person;
	}
	
	@RequestMapping("/save")
	public Person createPerson(String name) {
		Person person = new Person();
		person.setName("HungerFool" + counter.incrementAndGet());
		personDao.save(person);
		System.out.println(personDao.getClass());
		return person;
	}
}